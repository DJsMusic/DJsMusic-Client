// @flow

import { connect } from 'react-redux';
{{#if wantActionsAndReducer}}
import { compose, bindActionCreators } from 'redux';
{{else}}
import { bindActionCreators } from 'redux';
{{/if}}

{{#if wantActionsAndReducer}}
import injectReducer from 'utils/injectReducer';
{{/if}}
import {{ properCase componentName }} from 'components/{{ properCase componentName }}';

{{#if wantActionsAndReducer}}
import selectProps from './selectors';
import * as actions from './actions';
import reducer from './reducer';
import { NAMESPACE } from './constants';
{{/if}}

{{#if wantActionsAndReducer}}
const mapStateToProps = selectProps;
{{/if}}

function mapDispatchToProps(dispatch: Dispatch) {
  return {
    actions: bindActionCreators(actions, dispatch),
  };
}

{{#if wantActionsAndReducer}}
const withConnect = connect(mapStateToProps, mapDispatchToProps);
const withReducer = injectReducer({ key: NAMESPACE, reducer });

export default compose(
  withReducer,
  withConnect
)({{ properCase componentName }});
{{else}}
export default connect(null, mapDispatchToProps)({{ properCase componentName }});
{{/if}}
